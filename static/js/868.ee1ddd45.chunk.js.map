{"version":3,"file":"static/js/868.ee1ddd45.chunk.js","mappings":"0OACA,EAAmC,mCAAnC,EAAsG,gDAAtG,EAAiL,2CAAjL,EAAyP,6CAAzP,EAA+S,yB,sCCSlSA,EAAwC,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,OAC5D,OACI,gBAAKC,UAAWC,EAAhB,SACKH,GACK,SAAC,KAAD,CAASI,QAASH,EAAQC,UAAWC,EAAUE,GAAI,SAAnD,sBAEA,iBAAKH,UAAWC,EAAhB,WACE,iBAAMD,UAAWC,EAAjB,yDACA,2BACI,SAAC,KAAD,CAASE,GAAI,SACJH,UAAWI,GAAAA,CAAGH,EAAUA,GADjC,2B,UCIlBI,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WAUD,OAVCA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,oBAAAA,MACF,cAEC,oBAED,WACI,OAAO,SAACR,EAAD,CAAUC,QAASQ,KAAKC,MAAMT,QACpBC,OAAQO,KAAKC,MAAMR,aAGvC,EAVCM,CAA0BG,EAAAA,WAahC,GAAeC,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KA1BkB,SAACC,GACnB,MAAO,CACHb,QAASa,EAAMC,KAAKC,UAyBN,CAACd,OAAAA,EAAAA,KAFvB,CAEkCM","sources":["webpack://social-network/./src/components/Settings/Settings.module.css?96b0","components/Settings/Settings.tsx","components/Settings/SettingsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"buttonsContainer\":\"Settings_buttonsContainer__9jqM1\",\"withoutAuthorizationContainer\":\"Settings_withoutAuthorizationContainer__okobE\",\"withoutAuthorizationText\":\"Settings_withoutAuthorizationText__HXTaP\",\"withoutAuthorizationButton\":\"Settings_withoutAuthorizationButton__PKsRj\",\"button\":\"Settings_button__UyLhU\"};","import React from 'react';\r\nimport s from './Settings.module.css'\r\nimport {NavLink} from 'react-router-dom';\r\nimport cn from 'classnames';\r\n\r\ntype SettingsPropsType = {\r\n    isOwner: number | null\r\n    logout: () => void\r\n}\r\n\r\nexport const Settings: React.FC<SettingsPropsType> = ({isOwner, logout}) => {\r\n    return (\r\n        <div className={s.buttonsContainer}>\r\n            {isOwner\r\n                ? <NavLink onClick={logout} className={s.button} to={'/login'}>Log\r\n                    out</NavLink>\r\n                : <div className={s.withoutAuthorizationContainer}>\r\n                    <span className={s.withoutAuthorizationText}>Settings are available to authorized users</span>\r\n                    <span>\r\n                        <NavLink to={'/login'}\r\n                                 className={cn(s.button, s.withoutAuthorizationButton)}>Login</NavLink>\r\n                    </span>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import {connect} from 'react-redux';\r\nimport React from 'react';\r\nimport {compose} from 'redux';\r\nimport {Settings} from './Settings';\r\nimport {RootStateType} from '../../redux/redux-store';\r\nimport {logout} from '../../redux/auth-reducer';\r\n\r\ntype MapStateToPropsType = {\r\n    isOwner: number | null\r\n}\r\n\r\nlet mapStateToProps = (state: RootStateType): MapStateToPropsType => {\r\n    return {\r\n        isOwner: state.auth.userId,\r\n    };\r\n};\r\n\r\ntype MapDispatchToPropsType = {\r\n    logout: () => void\r\n}\r\n\r\nexport type SettingsPropsType = MapStateToPropsType & MapDispatchToPropsType;\r\n\r\nclass SettingsContainer extends React.Component<SettingsPropsType> {\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return <Settings isOwner={this.props.isOwner}\r\n                         logout={this.props.logout}\r\n\r\n        />\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect<MapStateToPropsType, MapDispatchToPropsType, {}, RootStateType>\r\n    (mapStateToProps, {logout}),)(SettingsContainer)"],"names":["Settings","isOwner","logout","className","s","onClick","to","cn","SettingsContainer","this","props","React","compose","connect","state","auth","userId"],"sourceRoot":""}